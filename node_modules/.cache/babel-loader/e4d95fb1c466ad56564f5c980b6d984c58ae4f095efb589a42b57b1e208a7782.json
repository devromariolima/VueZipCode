{"ast":null,"code":"export default {\n  data() {\n    return {\n      cep: '',\n      // CEP digitado pelo usuário\n      endereco: null,\n      // Dados do endereço retornado pela API\n      erro: '' // Mensagem de erro caso ocorra\n    };\n  },\n  methods: {\n    async buscarEndereco() {\n      try {\n        const response = await fetch(`https://viacep.com.br/ws/${this.cep}/json/`);\n        const data = await response.json();\n        if (data.erro) {\n          this.erro = 'CEP não encontrado!';\n          this.endereco = null;\n        } else {\n          this.endereco = {\n            logradouro: data.logradouro,\n            complemento: data.complemento || 'N/A',\n            bairro: data.bairro,\n            localidade: data.localidade,\n            uf: data.uf,\n            estado: 'São Paulo',\n            // Valor fixo para o exemplo, pode ser adaptado.\n            regiao: 'Sudeste',\n            // Valor fixo para o exemplo, pode ser adaptado.\n            ibge: data.ibge,\n            gia: data.gia || 'N/A',\n            ddd: data.ddd,\n            siafi: data.siafi\n          };\n          this.erro = '';\n        }\n      } catch (error) {\n        this.erro = 'Erro ao buscar o endereço. Verifique o CEP e tente novamente.';\n        this.endereco = null;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","cep","endereco","erro","methods","buscarEndereco","response","fetch","json","logradouro","complemento","bairro","localidade","uf","estado","regiao","ibge","gia","ddd","siafi","error"],"sources":["/home/romario/Área de Trabalho/Curso Coder/VueZipCode/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"cep-form\">\n    <h1>Buscar Endereço pelo CEP</h1>\n\n    <!-- Campo para entrada do CEP -->\n    <div>\n      <label for=\"cep\">CEP:</label>\n      <input type=\"text\" v-model=\"cep\" placeholder=\"Digite o CEP\" />\n      <button @click=\"buscarEndereco\">Buscar</button>\n    </div>\n\n    <!-- Exibindo os dados do endereço -->\n    <div v-if=\"endereco\">\n      <h2>Informações do Endereço:</h2>\n      <p><strong>Logradouro:</strong> {{ endereco.logradouro }}</p>\n      <p><strong>Complemento:</strong> {{ endereco.complemento }}</p>\n      <p><strong>Bairro:</strong> {{ endereco.bairro }}</p>\n      <p><strong>Localidade:</strong> {{ endereco.localidade }}</p>\n      <p><strong>UF:</strong> {{ endereco.uf }}</p>\n      <p><strong>Estado:</strong> {{ endereco.estado }}</p>\n      <p><strong>Região:</strong> {{ endereco.regiao }}</p>\n      <p><strong>IBGE:</strong> {{ endereco.ibge }}</p>\n      <p><strong>GIA:</strong> {{ endereco.gia }}</p>\n      <p><strong>DDD:</strong> {{ endereco.ddd }}</p>\n      <p><strong>SIAFI:</strong> {{ endereco.siafi }}</p>\n    </div>\n\n    <!-- Exibindo uma mensagem de erro, se houver -->\n    <div v-if=\"erro\">\n      <p>{{ erro }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      cep: '', // CEP digitado pelo usuário\n      endereco: null, // Dados do endereço retornado pela API\n      erro: '' // Mensagem de erro caso ocorra\n    };\n  },\n  methods: {\n    async buscarEndereco() {\n      try {\n        const response = await fetch(`https://viacep.com.br/ws/${this.cep}/json/`);\n        const data = await response.json();\n\n        if (data.erro) {\n          this.erro = 'CEP não encontrado!';\n          this.endereco = null;\n        } else {\n          this.endereco = {\n            logradouro: data.logradouro,\n            complemento: data.complemento || 'N/A',\n            bairro: data.bairro,\n            localidade: data.localidade,\n            uf: data.uf,\n            estado: 'São Paulo', // Valor fixo para o exemplo, pode ser adaptado.\n            regiao: 'Sudeste', // Valor fixo para o exemplo, pode ser adaptado.\n            ibge: data.ibge,\n            gia: data.gia || 'N/A',\n            ddd: data.ddd,\n            siafi: data.siafi\n          };\n          this.erro = '';\n        }\n      } catch (error) {\n        this.erro = 'Erro ao buscar o endereço. Verifique o CEP e tente novamente.';\n        this.endereco = null;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.cep-form {\n  max-width: 400px;\n  margin: 20px auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n}\n\nh1 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\ndiv {\n  margin-bottom: 15px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\nbutton {\n  padding: 10px 15px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #339a6e;\n}\n\np {\n  font-size: 16px;\n}\n</style>\n"],"mappings":"AAmCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MAAE;MACTC,QAAQ,EAAE,IAAI;MAAE;MAChBC,IAAI,EAAE,EAAC,CAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,IAAI,CAACN,GAAG,QAAQ,CAAC;QAC1E,MAAMD,IAAG,GAAI,MAAMM,QAAQ,CAACE,IAAI,CAAC,CAAC;QAElC,IAAIR,IAAI,CAACG,IAAI,EAAE;UACb,IAAI,CAACA,IAAG,GAAI,qBAAqB;UACjC,IAAI,CAACD,QAAO,GAAI,IAAI;QACtB,OAAO;UACL,IAAI,CAACA,QAAO,GAAI;YACdO,UAAU,EAAET,IAAI,CAACS,UAAU;YAC3BC,WAAW,EAAEV,IAAI,CAACU,WAAU,IAAK,KAAK;YACtCC,MAAM,EAAEX,IAAI,CAACW,MAAM;YACnBC,UAAU,EAAEZ,IAAI,CAACY,UAAU;YAC3BC,EAAE,EAAEb,IAAI,CAACa,EAAE;YACXC,MAAM,EAAE,WAAW;YAAE;YACrBC,MAAM,EAAE,SAAS;YAAE;YACnBC,IAAI,EAAEhB,IAAI,CAACgB,IAAI;YACfC,GAAG,EAAEjB,IAAI,CAACiB,GAAE,IAAK,KAAK;YACtBC,GAAG,EAAElB,IAAI,CAACkB,GAAG;YACbC,KAAK,EAAEnB,IAAI,CAACmB;UACd,CAAC;UACD,IAAI,CAAChB,IAAG,GAAI,EAAE;QAChB;MACF,EAAE,OAAOiB,KAAK,EAAE;QACd,IAAI,CAACjB,IAAG,GAAI,+DAA+D;QAC3E,IAAI,CAACD,QAAO,GAAI,IAAI;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}